{
  "swagger": "2.0",
  "info": {
    "title": "RedisManagementClient",
    "description": "REST API for Azure Redis Cache Service.",
    "version": "2016-04-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/default": {
      "put": {
        "tags": [
          "Redis"
        ],
        "operationId": "PatchSchedules_CreateOrUpdate",
        "x-ms-examples": {
          "RedisCachePatchSchedulesCreateOrUpdate": {
            "$ref": "#/definitions/RedisCachePatchSchedulesCreateOrUpdate"
          }
        },
        "description": "Create or replace the patching schedule for Redis cache (requires Premium SKU).",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis cache."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedisPatchSchedule"
            },
            "description": "Parameters to set the patching schedule for Redis cache."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RedisPatchSchedule"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Redis"
        ],
        "operationId": "PatchSchedules_Delete",
        "x-ms-examples": {
          "RedisCachePatchSchedulesDelete": {
            "$ref": "#/definitions/RedisCachePatchSchedulesDelete"
          }
        },
        "description": "Deletes the patching schedule of a redis cache (requires Premium SKU).",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the redis cache."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "204": {
            "description": "Success."
          }
        }
      },
      "get": {
        "tags": [
          "Redis"
        ],
        "operationId": "PatchSchedules_Get",
        "x-ms-examples": {
          "RedisCachePatchSchedulesGet": {
            "$ref": "#/definitions/RedisCachePatchSchedulesGet"
          }
        },
        "description": "Gets the patching schedule of a redis cache (requires Premium SKU).",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the redis cache."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of get patch schedules.",
            "schema": {
              "$ref": "#/definitions/RedisPatchSchedule"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "family": {
          "type": "string",
          "description": "The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).",
          "enum": [
            "C",
            "P"
          ],
          "x-ms-enum": {
            "name": "SkuFamily",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)."
        }
      },
      "required": [
        "name",
        "family",
        "capacity"
      ],
      "description": "SKU parameters supplied to the create Redis operation."
    },
    "RedisProperties": {
      "properties": {
        "redisConfiguration": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc."
        },
        "enableNonSslPort": {
          "type": "boolean",
          "description": "Specifies whether the non-ssl Redis server port (6379) is enabled."
        },
        "tenantSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "tenantSettings"
        },
        "shardCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of shards to be created on a Premium Cluster Cache."
        },
        "subnetId": {
          "type": "string",
          "pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$",
          "description": "The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1"
        },
        "staticIP": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+\\.\\d+$",
          "description": "Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network."
        }
      },
      "description": "Properties supplied to Create or Update Redis operation.",
      "x-ms-external": true
    },
    "RedisCreateProperties": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of the Redis cache to deploy."
        }
      },
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RedisProperties"
        }
      ],
      "description": "Properties supplied to Create Redis operation."
    },
    "RedisUpdateProperties": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of the Redis cache to deploy."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RedisProperties"
        }
      ],
      "description": "Properties supplied to Update Redis operation."
    },
    "Resource": {
      "description": "The Resource definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "RedisCreateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RedisCreateProperties",
          "description": "Redis cache properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Parameters supplied to the Create Redis operation."
    },
    "RedisUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RedisUpdateProperties",
          "description": "Redis cache properties."
        }
      },
      "description": "Parameters supplied to the Update Redis operation."
    },
    "RedisAccessKeys": {
      "properties": {
        "primaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "The current primary key that clients can use to authenticate with Redis cache."
        },
        "secondaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "The current secondary key that clients can use to authenticate with Redis cache."
        }
      },
      "description": "Redis cache access keys."
    },
    "RedisResourceProperties": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of the Redis cache to deploy."
        },
        "redisVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Redis version."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Redis instance provisioning status."
        },
        "hostName": {
          "readOnly": true,
          "type": "string",
          "description": "Redis host name."
        },
        "port": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Redis non-SSL port."
        },
        "sslPort": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Redis SSL port."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RedisProperties"
        }
      ],
      "description": "Parameters describing a Redis instance."
    },
    "RedisResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RedisResourceProperties",
          "description": "Redis cache properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A single Redis item in List or Get Operation."
    },
    "RedisListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RedisResource"
          },
          "description": "List of Redis cache instances."
        },
        "nextLink": {
          "type": "string",
          "description": "Link for next set of locations."
        }
      },
      "description": "The response of list Redis operation."
    },
    "RedisRegenerateKeyParameters": {
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The Redis access key to regenerate.",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "x-ms-enum": {
            "name": "RedisKeyType",
            "modelAsString": false
          }
        }
      },
      "required": [
        "keyType"
      ],
      "description": "Specifies which Redis access keys to reset."
    },
    "RedisRebootParameters": {
      "properties": {
        "rebootType": {
          "type": "string",
          "description": "Which Redis node(s) to reboot. Depending on this value data loss is possible.",
          "enum": [
            "PrimaryNode",
            "SecondaryNode",
            "AllNodes"
          ],
          "x-ms-enum": {
            "name": "RebootType",
            "modelAsString": true
          }
        },
        "shardId": {
          "type": "integer",
          "format": "int32",
          "description": "If clustering is enabled, the ID of the shard to be rebooted."
        }
      },
      "required": [
        "rebootType"
      ],
      "description": "Specifies which Redis node(s) to reboot."
    },
    "ExportRDBParameters": {
      "properties": {
        "format": {
          "type": "string",
          "description": "File format."
        },
        "prefix": {
          "type": "string",
          "description": "Prefix to use for exported files."
        },
        "container": {
          "type": "string",
          "description": "Container name to export to."
        }
      },
      "required": [
        "container",
        "prefix"
      ],
      "description": "Parameters for Redis export operation."
    },
    "ImportRDBParameters": {
      "properties": {
        "format": {
          "type": "string",
          "description": "File format."
        },
        "files": {
          "type": "array",
          "description": "files to import.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "files"
      ],
      "description": "Parameters for Redis import operation."
    },
    "ScheduleEntry": {
      "properties": {
        "dayOfWeek": {
          "type": "string",
          "description": "Day of the week when a cache can be patched.",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday",
            "Everyday",
            "Weekend"
          ],
          "x-ms-enum": {
            "name": "DayOfWeek",
            "modelAsString": false
          }
        },
        "startHourUtc": {
          "type": "integer",
          "format": "int32",
          "description": "Start hour after which cache patching can start."
        },
        "maintenanceWindow": {
          "type": "string",
          "format": "duration",
          "description": "ISO8601 timespan specifying how much time cache patching can take. "
        }
      },
      "required": [
        "dayOfWeek",
        "startHourUtc"
      ],
      "description": "Patch schedule entry for a Premium Redis Cache."
    },
    "ScheduleEntries": {
      "properties": {
        "scheduleEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleEntry"
          },
          "description": "List of patch schedules for a Redis cache."
        }
      },
      "required": [
        "scheduleEntries"
      ],
      "description": "List of patch schedules for a Redis cache."
    },
    "RedisPatchSchedule": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ScheduleEntries",
          "description": "List of patch schedules for a Redis cache."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Response to put/get patch schedules for Redis cache."
    },
    "RedisCacheCreate": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid",
        "parameters": {
          "location": "West US",
          "properties": {
            "sku": {
              "name": "Premium",
              "family": "P",
              "capacity": 1
            },
            "enableNonSslPort": true,
            "shardCount": 2,
            "redisConfiguration": {
              "maxmemory-policy": "allkeys-lru"
            },
            "subnetId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualNetworks/network1/subnets/subnet1",
            "staticIP": "192.168.0.5"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1",
            "location": "West US",
            "name": "cache1",
            "type": "Microsoft.Cache/Redis",
            "tags": {},
            "properties": {
              "accessKeys": {
                "primaryKey": "secretkey1",
                "secondaryKey": "secretKey2"
              },
              "provisioningState": "Succeeded",
              "redisVersion": "3.0",
              "sku": {
                "name": "Premium",
                "family": "P",
                "capacity": 1
              },
              "enableNonSslPort": false,
              "redisConfiguration": {
                "maxmemory-policy": "allkeys-lru"
              },
              "hostName": "cache1.redis.cache.windows.net",
              "port": 6379,
              "sslPort": 6380
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1",
            "location": "West US",
            "name": "cache1",
            "type": "Microsoft.Cache/Redis",
            "tags": {},
            "properties": {
              "accessKeys": {
                "primaryKey": "secretkey1",
                "secondaryKey": "secretKey2"
              },
              "provisioningState": "Succeeded",
              "redisVersion": "3.0",
              "sku": {
                "name": "Premium",
                "family": "P",
                "capacity": 1
              },
              "enableNonSslPort": false,
              "redisConfiguration": {
                "maxclients": "1000",
                "maxmemory-reserved": "50",
                "maxmemory-delta": "50"
              },
              "hostName": "cache1.redis.cache.windows.net",
              "port": 6379,
              "sslPort": 6380
            }
          }
        }
      }
    },
    "RedisCacheUpdate": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid",
        "parameters": {
          "properties": {
            "enableNonSslPort": true
          }
        }
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1",
            "location": "West US",
            "name": "cache1",
            "type": "Microsoft.Cache/Redis",
            "tags": {},
            "properties": {
              "accessKeys": {
                "primaryKey": "secretkey1",
                "secondaryKey": "secretKey2"
              },
              "provisioningState": "Succeeded",
              "redisVersion": "3.0",
              "sku": {
                "name": "Premium",
                "family": "P",
                "capacity": 1
              },
              "enableNonSslPort": false,
              "redisConfiguration": {
                "maxclients": "1000",
                "maxmemory-reserved": "50",
                "maxmemory-delta": "50"
              },
              "hostName": "cache1.redis.cache.windows.net",
              "port": 6379,
              "sslPort": 6380
            }
          }
        }
      }
    },
    "RedisCacheDelete": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    },
    "RedisCacheGet": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1",
            "location": "West US",
            "name": "cache1",
            "type": "Microsoft.Cache/Redis",
            "tags": {},
            "properties": {
              "provisioningState": "Creating",
              "redisVersion": "3.2",
              "sku": {
                "name": "Standard",
                "family": "C",
                "capacity": 6
              },
              "enableNonSslPort": true,
              "redisConfiguration": {},
              "hostName": "cache1.redis.cache.windows.net",
              "port": 6379,
              "sslPort": 6380
            }
          }
        }
      }
    },
    "RedisCacheListByResourceGroup": {
      "parameters": {
        "api-version": "2016-04-01",
        "resourceGroupName": "rg1",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1",
                "location": "West US",
                "name": "cache1",
                "type": "Microsoft.Cache/Redis",
                "tags": {},
                "properties": {
                  "provisioningState": "Creating",
                  "redisVersion": "3.2",
                  "sku": {
                    "name": "Standard",
                    "family": "C",
                    "capacity": 6
                  },
                  "enableNonSslPort": true,
                  "redisConfiguration": {},
                  "hostName": "cache1.redis.cache.windows.net",
                  "port": 6379,
                  "sslPort": 6380
                }
              }
            ]
          }
        }
      }
    },
    "RedisCacheList": {
      "parameters": {
        "api-version": "2016-04-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1",
                "location": "West US",
                "name": "cache1",
                "type": "Microsoft.Cache/Redis",
                "tags": {},
                "properties": {
                  "provisioningState": "Creating",
                  "redisVersion": "3.2",
                  "sku": {
                    "name": "Standard",
                    "family": "C",
                    "capacity": 6
                  },
                  "enableNonSslPort": true,
                  "redisConfiguration": {},
                  "hostName": "cache1.redis.cache.windows.net",
                  "port": 6379,
                  "sslPort": 6380
                }
              }
            ]
          }
        }
      }
    },
    "RedisCacheListKeys": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "primaryKey": "secretkey1",
            "secondaryKey": "secretKey2"
          }
        }
      }
    },
    "RedisCacheRegenerateKey": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid",
        "parameters": {
          "keyType": "Primary"
        }
      },
      "responses": {
        "200": {
          "body": {
            "primaryKey": "secretkey1",
            "secondaryKey": "secretKey2"
          }
        }
      }
    },
    "RedisCacheForceReboot": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid",
        "parameters": {
          "shardId": 0,
          "rebootType": "AllNodes"
        }
      },
      "responses": {
        "200": {
          "body": {}
        }
      }
    },
    "RedisCacheImport": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid",
        "parameters": {
          "format": "RDB",
          "files": [
            "http://fileuris.contoso.com/pathtofile1"
          ]
        }
      },
      "responses": {
        "202": {
          "headers": {
            "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult..."
          }
        }
      }
    },
    "RedisCacheExport": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid",
        "parameters": {
          "format": "RDB",
          "prefix": "datadump1",
          "container": "https://contosostorage.blob.core.window.net/urltoBlobContainer?sasKeyParameters"
        }
      },
      "responses": {
        "202": {
          "headers": {
            "location": "https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult..."
          }
        }
      }
    },
    "RedisCachePatchSchedulesCreateOrUpdate": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid",
        "parameters": {
          "properties": {
            "scheduleEntries": [
              {
                "dayOfWeek": "Monday",
                "startHourUtc": 12,
                "maintenanceWindow": "PT3H"
              },
              {
                "dayOfWeek": "Tuesday",
                "startHourUtc": 12
              }
            ]
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default",
            "location": "West US",
            "name": "default",
            "type": "Microsoft.Cache/Redis/patchSchedules",
            "properties": {
              "scheduleEntries": [
                {
                  "dayOfWeek": "Monday",
                  "startHourUtc": 12,
                  "maintenanceWindow": "PT3H"
                },
                {
                  "dayOfWeek": "Tuesday",
                  "startHourUtc": 12
                }
              ]
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default",
            "location": "West US",
            "name": "default",
            "type": "Microsoft.Cache/Redis/patchSchedules",
            "properties": {
              "scheduleEntries": [
                {
                  "dayOfWeek": "Monday",
                  "startHourUtc": 12,
                  "maintenanceWindow": "PT3H"
                },
                {
                  "dayOfWeek": "Tuesday",
                  "startHourUtc": 12
                }
              ]
            }
          }
        }
      }
    },
    "RedisCachePatchSchedulesDelete": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    },
    "RedisCachePatchSchedulesGet": {
      "parameters": {
        "name": "cache1",
        "resourceGroupName": "rg1",
        "api-version": "2016-04-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default",
            "location": "West US",
            "name": "default",
            "type": "Microsoft.Cache/Redis/patchSchedules",
            "properties": {
              "scheduleEntries": [
                {
                  "dayOfWeek": "Monday",
                  "startHourUtc": 12,
                  "maintenanceWindow": "PT3H"
                },
                {
                  "dayOfWeek": "Tuesday",
                  "startHourUtc": 12
                }
              ]
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}
